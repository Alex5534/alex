knowledge_base = {
    "sachin":"batsman",
    "batsman":"cricketer",
    "cricketer":"sportsperson",
    "human":"mammal",
    "dog":"mammal",
    "mammal":"livingbeing",
    "dog":"mammal",
    "cat":"mammal"
    }

def derive_predicate(kb, entity, target):
    """
    Try to derive if an entity is a kind of target using trasitive inference"
    """
    visited = set()
    to_visit = [entity]

    while to_visit:
        current = to_visit.pop()

        if current == target:
            return True

        if current in kb and current not in visited:
            visited.add(current)
            to_visit.append(kb[current])

        return False

queries = [
    ("Sachin", "Cricketer"),
    ("Sachin", "Sportperson"),
    ("Sachin", "LivingBeing"),
    ("Sachin", "LivingBeing"),
    ("Sachin", "Sportsperson"),
    ]

for entity, target in queries:
    if derive_predicate(knowledge_base, entity, target):
        print(f"{entity} is a {target}")
    else:
        print(f"Cannot derive that {entity} is a {target}")
